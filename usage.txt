usage:

Ctilemgr -W <tile-width> -H <tile-height> -T <minZoom> -B <maxZoom> -p <path-pattern> [-e <scale-edge-option>] [-f <scale-interpolation-option>] [-c <transparent-color>] [-m <mode>] [-x] ${x1},${y1} [path1], ${x2},${y2} [path2], ......
	
example:
Ctilemgr -W512 -H512 -T0 -B5 -p ../v2/v2-data/z{z}/tile/{x},{y}.png -e ZERO -f DEFAULT -c #000000 -m 3 -x -1,1 /home/tmp/-1,1-201901172206001.png 3,4 tmp/3,4-201901172206002.png


[necessary]

	-W <tile-width>:					number
	-H <tile-height>:					number
	-T <minZoom>						number
	-B <maxZoom>						number		minZoom <= maxZoom
	-p <path-pattern>					string		string with `{x}` `{y}` `{z}`;	relative or absolute
	-m <mode>							selection{`1`, `2`, `3`}
	
[optional]
	
	-e <scale-edge-option>				selection{`CLAM`, `REFLECT`, `WRAP`, `ZERO`} about how to handle with image edge; optional; default is `CLAM`
	-f <scale-interpolation-option>		selection{`DEFAULT`, `BOX`, `TRIANGLE`, `CUBICBSPLINE`, `CATMULLROM`, `FILTER_MITCHELL`} about how to interpolation; optional; default is `DEFAULT`
	-c <transparent-color>				format #RRGGBB hexRGB; transparent-color; optional; default is `#000000`
	-x									if to check dirs when update tiles; optional; default is false;

[arguments]
	-in mode `1` or `3`
		${x1},${y1} path1 ${x2},${y2} path2			update tile (maxZoom,(`x`,`y`)) with image on `path`
	-in mode `2`
		${x1},${y1} ${x2},${y2}						generate tiles from maxZoom to minZoom